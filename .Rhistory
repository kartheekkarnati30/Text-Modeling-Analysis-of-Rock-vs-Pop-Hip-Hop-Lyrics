verse_dtm <- song_lyrics_dtm
verse_lda <- LDA(verse_dtm, k = 10, control = list(seed = 234))
verse_lda
verse_topics <- tidy(verse_lda, matrix = "beta")
verse_topics
top_terms <- verse_topics %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
scale_x_reordered()
verse_gamma <- tidy(verse_lda, matrix = "gamma")
verse_gamma
song_lyrics_ele_words
song_lyrics_ele_words %>%
unite(band, element_id)
song_lyrics_ele_words
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE)
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE) %>%
select(band_verse, word)
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE) %>%
select(-band, -element_id)
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE) %>%
count(band_verse, word, sort = TRUE)
count(band_verse, word, sort = TRUE)
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE) %>%
dplyr::select(-band, -element_id) %>%
count(band_verse, word, sort = TRUE)
song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE)
verse_words <- song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = FALSE)
verse_words <- song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = TRUE)
verse_words
verse_words <- song_lyrics_ele_words %>%
unite(band_verse, c(band, element_id), sep = "_", remove = TRUE) %>%
count(band_verse, word, sort = TRUE)
verse_words
verse_dtm <- verse_words %>%
cast_dtm(band_verse, word, n)
verse_dtm
verse_lda <- LDA(verse_dtm, k = 10, control = list(seed = 234))
verse_lda
verse_topics <- tidy(verse_lda, matrix = "beta")
verse_topics
top_terms <- verse_topics %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
scale_x_reordered()
verse_gamma <- tidy(verse_lda, matrix = "gamma")
verse_gamma
verse_gamma <- verse_gamma %>%
separate(band_verse, c("band", "verse"), sep = "_", convert = TRUE)
verse_gamma
verse_gamma <- verse_gamma %>%
separate(document, c("band", "verse"), sep = "_", convert = TRUE)
verse_gamma
verse_gamma %>%
mutate(title = reorder(band, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~ title)
verse_gamma
verse_classifications <- verse_gamma %>%
group_by(band, verse) %>%
top_n(1, gamma) %>%
ungroup()
verse_classifications
band_topics <- verse_classifications %>%
count(band, topic) %>%
group_by(band) %>%
top_n(1, n) %>%
ungroup() %>%
transmute(consensus = band, topic)
verse_classifications %>%
inner_join(band_topics, by = "topic") %>%
filter(band != consensus)
verse_classifications
verse_classifications %>%
inner_join(band_topics, by = "topic") %>%
filter(band != consensus)
assignments <- augment(verse_lda, data = verse_dtm)
assignments
assignments <- assignments %>%
separate(document, c("band", "verse"), sep = "_", convert = TRUE) %>%
inner_join(band_topics, by = c(".topic" = "topic"))
assignments
assignments %>%
count(band, consensus, wt = count) %>%
group_by(band) %>%
mutate(percent = n / sum(n)) %>%
ggplot(aes(consensus, band, fill = percent)) +
geom_tile() +
scale_fill_gradient2(high = "red", label = percent_format()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid = element_blank()) +
labs(x = "band's words were assigned to",
y = "band's words came from",
fill = "% of assignments")
knitr::opts_chunk$set(echo = TRUE)
urls <- c( "https://www.allthelyrics.com/lyrics/taylor_swift",
"https://www.allthelyrics.com/lyrics/rihanna",
"https://www.allthelyrics.com/lyrics/selena_gomez",
"https://www.allthelyrics.com/lyrics/miley_cyrus",
"https://www.allthelyrics.com/lyrics/adele",
"https://www.allthelyrics.com/lyrics/travis_scott",
"https://www.allthelyrics.com/lyrics/john_legend",
"https://www.allthelyrics.com/lyrics/shawn_mendes",
"https://www.allthelyrics.com/lyrics/one_direction",
"https://www.allthelyrics.com/lyrics/chris_brown")
webpages <- list()
name_htmls <- list()
names <- list()
for (i in 1:10){
webpages[[i]] <- read_html(urls[[i]])
name_htmls[[i]] <- html_nodes(webpages[[i]], '.artist-lyrics-list-all a')
names[[i]] <- html_text(name_htmls[[i]])
webpages <- c(webpages, webpages[[i]])
name_htmls <- c(name_htmls, name_htmls[[i]])
names <- c(names, names[[i]])
}
song_names <- names[1:10]
song_names_unlist <- unlist(song_names, recursive = FALSE)
length(song_names)
dim(song_names)
song_names_unlist
length(song_names_unlist)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:643){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
}
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:643){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
}
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:643){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyrics <- c(lyrics, lyrics[[i]])
}
name_htmls_unlist
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:643){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyrics <- c(lyrics, lyrics[[i]])
}
names
song_names_unlist
hrefs
subpages
lyrics
hrefs
urls <- c( "https://www.allthelyrics.com/lyrics/pink",
"https://www.allthelyrics.com/lyrics/rihanna",
"https://www.allthelyrics.com/lyrics/selena_gomez",
"https://www.allthelyrics.com/lyrics/miley_cyrus",
"https://www.allthelyrics.com/lyrics/adele",
"https://www.allthelyrics.com/lyrics/travis_scott",
"https://www.allthelyrics.com/lyrics/john_legend",
"https://www.allthelyrics.com/lyrics/shawn_mendes",
"https://www.allthelyrics.com/lyrics/one_direction",
"https://www.allthelyrics.com/lyrics/chris_brown")
webpages <- list()
name_htmls <- list()
names <- list()
for (i in 1:10){
webpages[[i]] <- read_html(urls[[i]])
name_htmls[[i]] <- html_nodes(webpages[[i]], '.artist-lyrics-list-all a')
names[[i]] <- html_text(name_htmls[[i]])
webpages <- c(webpages, webpages[[i]])
name_htmls <- c(name_htmls, name_htmls[[i]])
names <- c(names, names[[i]])
}
song_names <- names[1:10]
song_names_unlist <- unlist(song_names, recursive = FALSE)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:643){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyrics <- c(lyrics, lyrics[[i]])
}
name_htmls_unlist
length(name_htmls_unlist)
urls <- c( "https://www.allthelyrics.com/lyrics/pink",
"https://www.allthelyrics.com/lyrics/rihanna",
"https://www.allthelyrics.com/lyrics/selena_gomez",
"https://www.allthelyrics.com/lyrics/miley_cyrus",
"https://www.allthelyrics.com/lyrics/adele",
"https://www.allthelyrics.com/lyrics/travis_scott",
"https://www.allthelyrics.com/lyrics/john_legend",
"https://www.allthelyrics.com/lyrics/shawn_mendes",
"https://www.allthelyrics.com/lyrics/one_direction",
"https://www.allthelyrics.com/lyrics/chris_brown")
webpages <- list()
name_htmls <- list()
names <- list()
for (i in 1:10){
webpages[[i]] <- read_html(urls[[i]])
name_htmls[[i]] <- html_nodes(webpages[[i]], '.artist-lyrics-list-all a')
names[[i]] <- html_text(name_htmls[[i]])
webpages <- c(webpages, webpages[[i]])
name_htmls <- c(name_htmls, name_htmls[[i]])
names <- c(names, names[[i]])
}
song_names <- names[1:10]
song_names_unlist <- unlist(song_names, recursive = FALSE)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:602){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
}
length(lyrics)
length(name_htmls_unlist)
#View(lyrics)
lyrics_unlist <- unlist(lyrics, recursive = FALSE)
#View(lyrics_unlist)
library(scales)
assignments %>%
count(document.x, document.y, wt = count) %>%
group_by(document.x) %>%
mutate(percent = n / sum(n)) %>%
ggplot(aes(document.y, document.x, fill = percent)) +
geom_tile() +
scale_fill_gradient2(high = "red", label = percent_format()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid = element_blank()) +
labs(x = "band's words were assigned to",
y = "band's words came from",
fill = "% of assignments")
song_lyrics
song_lyrics_ele_words
song_lyrics_words
assignments <- augment(verse_lda, data = verse_dtm)
assignments
assignments <- assignments %>%
separate(document, c("band", "verse"), sep = "_", convert = TRUE) %>%
inner_join(band_topics, by = c(".topic" = "topic"))
assignments
#here true band is "band" and consensus band is "consensus"
assignments %>%
count(band, consensus, wt = count) %>%
group_by(band) %>%
mutate(percent = n / sum(n)) %>%
ggplot(aes(consensus, band, fill = percent)) +
geom_tile() +
scale_fill_gradient2(high = "red", label = percent_format()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid = element_blank()) +
labs(x = "band's words were assigned to",
y = "band's words came from",
fill = "% of assignments")
#AC/DC is the most distinct. Led Zeppelin and Eagles are misclassified as each other
#(more so than other misclassifications).
#Very few verses/words of Pink Floyd were identified as The Rolling Stones.
#No band has the chance of being identified as another more than chance of being identified as itself.
verse_words
lyrics_unlist
popsong_lyrics <- data.frame(matrix(unlist(lyrics_unlist), byrow=T),stringsAsFactors=FALSE)
popsong_lyrics <- popsong_lyrics %>%
rename(popsong_lyrics = matrix.unlist.lyrics_unlist...byrow...T.)
View(popsong_lyrics)
fake <- c(1,2,3,4,5)
fake <- c(fake, "done")
fake
urls <- c( "https://www.allthelyrics.com/lyrics/pink",
"https://www.allthelyrics.com/lyrics/rihanna",
"https://www.allthelyrics.com/lyrics/selena_gomez",
"https://www.allthelyrics.com/lyrics/miley_cyrus",
"https://www.allthelyrics.com/lyrics/adele",
"https://www.allthelyrics.com/lyrics/travis_scott",
"https://www.allthelyrics.com/lyrics/john_legend",
"https://www.allthelyrics.com/lyrics/shawn_mendes",
"https://www.allthelyrics.com/lyrics/one_direction",
"https://www.allthelyrics.com/lyrics/chris_brown")
webpages <- list()
name_htmls <- list()
names <- list()
for (i in 1:10){
webpages[[i]] <- read_html(urls[[i]])
name_htmls[[i]] <- html_nodes(webpages[[i]], '.artist-lyrics-list-all a')
names[[i]] <- html_text(name_htmls[[i]])
webpages <- c(webpages, webpages[[i]])
name_htmls <- c(name_htmls, name_htmls[[i]])
names <- c(names, names[[i]])
}
song_names <- names[1:10]
song_names_unlist <- unlist(song_names, recursive = FALSE)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:602){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
lyris <- c(lyris, "!!!!!!!DONE WITH THE PREVIOUS SINGER!!!!!!!")
}
# length(lyrics)
# length(name_htmls_unlist)
#View(lyrics)
lyrics_unlist <- unlist(lyrics, recursive = FALSE)
#View(lyrics_unlist)
popsong_lyrics <- data.frame(matrix(unlist(lyrics_unlist), byrow=T),stringsAsFactors=FALSE)
popsong_lyrics <- popsong_lyrics %>%
rename(popsong_lyrics = matrix.unlist.lyrics_unlist...byrow...T.)
View(popsong_lyrics)
View(lyris)
View(names_html_unlist)
View(name_htmls_unlist)
urls <- c( "https://www.allthelyrics.com/lyrics/pink",
"https://www.allthelyrics.com/lyrics/rihanna",
"https://www.allthelyrics.com/lyrics/selena_gomez",
"https://www.allthelyrics.com/lyrics/miley_cyrus",
"https://www.allthelyrics.com/lyrics/adele",
"https://www.allthelyrics.com/lyrics/travis_scott",
"https://www.allthelyrics.com/lyrics/john_legend",
"https://www.allthelyrics.com/lyrics/shawn_mendes",
"https://www.allthelyrics.com/lyrics/one_direction",
"https://www.allthelyrics.com/lyrics/chris_brown")
webpages <- list()
name_htmls <- list()
names <- list()
for (i in 1:10){
webpages[[i]] <- read_html(urls[[i]])
name_htmls[[i]] <- html_nodes(webpages[[i]], '.artist-lyrics-list-all a')
names[[i]] <- html_text(name_htmls[[i]])
webpages <- c(webpages, webpages[[i]])
name_htmls <- c(name_htmls, name_htmls[[i]])
names <- c(names, names[[i]])
}
song_names <- names[1:10]
song_names_unlist <- unlist(song_names, recursive = FALSE)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:602){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
lyrics <- c(lyrics, "NEW SONG")
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
}
# length(lyrics)
# length(name_htmls_unlist)
#View(lyrics)
lyrics_unlist <- unlist(lyrics, recursive = FALSE)
#View(name_htmls_unlist)
#View(lyrics_unlist)
popsong_lyrics <- data.frame(matrix(unlist(lyrics_unlist), byrow=T),stringsAsFactors=FALSE)
popsong_lyrics <- popsong_lyrics %>%
rename(popsong_lyrics = matrix.unlist.lyrics_unlist...byrow...T.)
View(popsong_lyrics)
#function to scrape song lyrics
getData <- function(url){
page1 <- read_html(url)
nodes1 <- html_nodes(page1, '#page p')
Data <- html_text(nodes1)
return(Data)
return("NEW SONG")
}
name_htmls_unlist <- unlist(name_htmls[1:10], recursive = FALSE)
hrefs <- list()
subpages <- list()
lyrics <- list()
for (i in 1:602){
hrefs[[i]] <- html_attr(name_htmls_unlist[[i]], 'href')
subpages[[i]] <- paste0('https://www.allthelyrics.com/', hrefs[[i]])
lyrics[[i]] <- lapply(subpages[[i]], getData)
hrefs <- c(hrefs, hrefs[[i]])
subpages <- c(subpages, subpages[[i]])
lyris <- c(lyrics, lyrics[[i]])
}
# length(lyrics)
# length(name_htmls_unlist)
#View(lyrics)
lyrics_unlist <- unlist(lyrics, recursive = FALSE)
#View(name_htmls_unlist)
#View(lyrics_unlist)
popsong_lyrics <- data.frame(matrix(unlist(lyrics_unlist), byrow=T),stringsAsFactors=FALSE)
popsong_lyrics <- popsong_lyrics %>%
rename(popsong_lyrics = matrix.unlist.lyrics_unlist...byrow...T.)
View(popsong_lyrics)
